/*************************************************
 *
 *
 * 0Konstanten managen
 * Hinweis: neues deployment...neue Adresse und ABI !!!!!
 *
 ***************************************************/
const dasJahr = "2018"

const versicherungsvertragByteCodeADR =
  "";
const versicherungsvertragDeployedByteCodeADR =
  "";

  
const versicherungsvertragABI = [
 
  {
    "constant": true,
    "inputs": [],
    "name": "laufzeit",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "transporte",
    "outputs": [
      {
        "name": "",
        "type": "address"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "status",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "versicherer",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "erstellungsdatum",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "beginn",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "summe",
    "outputs": [
      {
        "name": "",
        "type": "int256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "tarif",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "id",
    "outputs": [
      {
        "name": "",
        "type": "bytes8"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "nr",
    "outputs": [
      {
        "name": "",
        "type": "int256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "ende",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "versicherungsnehmer",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "name": "kp",
        "type": "address"
      },
      {
        "name": "vn",
        "type": "string"
      },
      {
        "name": "vu",
        "type": "string"
      },
      {
        "name": "tar",
        "type": "string"
      },
      {
        "name": "vnr",
        "type": "int256"
      },
      {
        "name": "sum",
        "type": "int256"
      }
    ],
    "payable": true,
    "stateMutability": "payable",
    "type": "constructor"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "gibTransportAnzahl",
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "transport",
        "type": "address"
      }
    ],
    "name": "ergaenzeTransport",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "ermittleSchadenshoehe",
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "lz",
        "type": "string"
      },
      {
        "name": "bg",
        "type": "string"
      },
      {
        "name": "ed",
        "type": "string"
      }
    ],
    "name": "aendereLaufzeit",
    "outputs": [],
    "payable": true,
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [],
    "name": "beendeVertrag",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [],
    "name": "starteVertrag",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "gibSchadenDetails",
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "gibID",
    "outputs": [
      {
        "name": "",
        "type": "bytes8"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "gibDetails",
    "outputs": [
      {
        "name": "",
        "type": "bytes8"
      },
      {
        "name": "",
        "type": "string"
      },
      {
        "name": "",
        "type": "string"
      },
      {
        "name": "",
        "type": "string"
      },
      {
        "name": "",
        "type": "int256"
      },
      {
        "name": "",
        "type": "string"
      },
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "index",
        "type": "uint256"
      }
    ],
    "name": "gibTransport",
    "outputs": [
      {
        "name": "",
        "type": "address"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "vn",
        "type": "string"
      },
      {
        "name": "vu",
        "type": "string"
      },
      {
        "name": "tar",
        "type": "string"
      },
      {
        "name": "vnr",
        "type": "int256"
      },
      {
        "name": "sum",
        "type": "int256"
      }
    ],
    "name": "aendereVertrag",
    "outputs": [],
    "payable": true,
    "stateMutability": "payable",
    "type": "function"
  } 
];

const kooperationByteCode = "";
const kooperationABI = [

  {
    "constant": true,
    "inputs": [],
    "name": "name",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "beschreibung",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "versicherungen",
    "outputs": [
      {
        "name": "nr",
        "type": "uint256"
      },
      {
        "name": "name",
        "type": "string"
      },
      {
        "name": "branche",
        "type": "string"
      },
      {
        "name": "kategorie",
        "type": "string"
      },
      {
        "name": "tarife",
        "type": "string"
      },
      {
        "name": "saldo",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "details",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "speditionen",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "nr",
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "versicherungsvertraege",
    "outputs": [
      {
        "name": "",
        "type": "address"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "name": "p",
        "type": "uint256"
      },
      {
        "name": "n",
        "type": "string"
      },
      {
        "name": "d",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "name": "adr",
        "type": "address"
      },
      {
        "indexed": false,
        "name": "nr",
        "type": "uint256"
      }
    ],
    "name": "KooperationErstellt",
    "type": "event"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "gibName",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "gibNr",
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "gibDetails",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "gibBeschreibung",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "gibSpeditionAnzahl",
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "gibVersicherungAnzahl",
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "gibVersicherungsvertragAnzahl",
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "index",
        "type": "uint256"
      }
    ],
    "name": "gibVersicherungsvertrag",
    "outputs": [
      {
        "name": "",
        "type": "address"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "index",
        "type": "uint256"
      }
    ],
    "name": "gibSpedition",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "index",
        "type": "uint256"
      }
    ],
    "name": "gibVersicherungID",
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "index",
        "type": "uint256"
      }
    ],
    "name": "gibVersicherungName",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "index",
        "type": "uint256"
      }
    ],
    "name": "gibVersicherungDetails",
    "outputs": [
      {
        "name": "",
        "type": "string"
      },
      {
        "name": "",
        "type": "string"
      },
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "gibKooperation",
    "outputs": [
      {
        "name": "",
        "type": "string"
      },
      {
        "name": "",
        "type": "string"
      },
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "p",
        "type": "string"
      }
    ],
    "name": "aendereName",
    "outputs": [],
    "payable": true,
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "p",
        "type": "string"
      }
    ],
    "name": "aendereBeschreibung",
    "outputs": [],
    "payable": true,
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "p",
        "type": "string"
      }
    ],
    "name": "aendereDetails",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "n",
        "type": "string"
      },
      {
        "name": "d",
        "type": "string"
      },
      {
        "name": "b",
        "type": "string"
      }
    ],
    "name": "aendereKooperation",
    "outputs": [],
    "payable": true,
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "n",
        "type": "string"
      },
      {
        "name": "t",
        "type": "string"
      }
    ],
    "name": "ergaenzeVersicherung",
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "n",
        "type": "string"
      }
    ],
    "name": "ergaenzeSpedition",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "vv",
        "type": "address"
      }
    ],
    "name": "ergaenzeVersicherungsvertrag",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  }
  
];



/*************************************************
 * 
 * 
 * 0Versicherungsvertrag managen
 * 
 * 
 ***************************************************/
function kooperationAnzeigen(data)  {

  console.log("Kooperation anzeigen ..." + kooperationContractADR);

  //Anhang der Adresse den Kooperationsvertrag suchen
  var myContract = web3.eth.contract(kooperationABI);
  var contract = myContract.at(kooperationContractADR);
  data.dieKooperation = contract;
  data.dieKooperationAdresse = kooperationContractADR

  contract.name((error, value) => {
    if (error) { console.error("fehlerchen: " + error); }
    if (!error) {
      data.dieKooperationName = value;
    }
  });

  contract.gibVersicherungsvertragAnzahl((error, value) => {
    if (error) {console.error(error);}
    data.anzahlVersicherungsvertraege=value;
  });
  console.log("Versicherungsvertrag (noch nicht?) gefunden!");

}


/*************************************************
 *
 *
 * 0Kooperationen managen
 *
 *
 ***************************************************/
function versicherungsvertragBezahlen(data){



  console.log("Bezahle Vertrag ... " + data.dieKooperationName + data.derVersicherungsvertrag );
  var param1=data.derVersicherungsvertrag;

  try {

    // aktuellen Stand holen
    //var contractDesc = web3.eth.contract(kooperationABI);
    //var contract = contractDesc.at(data.dieKooperationAdresse); 
    const bccToken = "0x7F26D52A1b2eB284bC0a155Cd84887d06eB89d1d";
    var contract = web3.eht.contract.address("0x7F26D52A1b2eB284bC0a155Cd84887d06eB89d1d");
    var k1 = "0x947e202Ef011728AaFe46Bf85821A282c2Ef007b";
    var k2 = "0xc9624535E370fc03362Fdd9Ca96dd085e7B0b920";
    var betrag = "333";

    contract.transfer (
      {from : k1, to : k2, betrag, gas: fgDefaultGas},
      function(err, value){
        if(!err) {
          // NOTE: The callback will fire twice!
          // Once the contract has the transactionHash property set and once its deployed on an address.
           // e.g. check tx hash on the first call (transaction send)
          if(!contract.address) {
              console.log("Phase1- " + value.transactionHash) // The hash of the transaction, which deploys the contract

          // check address on the second call (contract deployed)
          } else {
              console.log("Phase2- " + contract.address) // the contract address
          }
           // Note that the returned "myContractReturned" === "myContract",
          // so the returned "myContractReturned" object will also get the address set.
       }
       else {

         console.log("Fehler in der Methode beim Speditionen aendern: " + error);

       }
      });



    console.log("Registrierung des Versicherungsvertrags in der Kooperation fertig.")


  } catch (error) {

    console.log("Registrierung des Versicherungsvertrags in der Kooperation fehlerhaft " + error);

  }



}




/*************************************************
 *
 *
 * 0Kooperationen managen
 *
 *
 ***************************************************/
function versicherungsvertragRegistrieren(data){



  console.log("Registriere Vertrag ... " + data.dieKooperationName + data.derVersicherungsvertrag );
  var param1=data.derVersicherungsvertrag;

  try {

    // aktuellen Stand holen
    var contractDesc = web3.eth.contract(kooperationABI);
    var contract = contractDesc.at(data.dieKooperationAdresse); 

    contract.ergaenzeVersicherungsvertrag(
      param1,
      {from : bcManager, value: gebuehr0, gas: fgDefaultGas},
      function(err, value){
        if(!err) {
          // NOTE: The callback will fire twice!
          // Once the contract has the transactionHash property set and once its deployed on an address.
           // e.g. check tx hash on the first call (transaction send)
          if(!contract.address) {
              console.log("Phase1- " + value.transactionHash) // The hash of the transaction, which deploys the contract

          // check address on the second call (contract deployed)
          } else {
              console.log("Phase2- " + contract.address) // the contract address
          }
           // Note that the returned "myContractReturned" === "myContract",
          // so the returned "myContractReturned" object will also get the address set.
       }
       else {

         console.log("Fehler in der Methode beim Speditionen aendern: " + error);

       }
      });



    console.log("Registrierung des Versicherungsvertrags in der Kooperation fertig.")


  } catch (error) {

    console.log("Registrierung des Versicherungsvertrags in der Kooperation fehlerhaft " + error);

  }



}

 function aendereVersicherungsvertrag (data) {

  console.log("Kooperation aendern ... " + data.versicherungsvertragsadresse );
  var param1=data.versicherer;
  var param2=data.versicherungsnehmer;
  var param3=data.tarif;
  var param4=data.id;
  var param5=data.summe;


  try {


    //
    var myContract = web3.eth.contract(versicherungsvertragABI);
    var myContractInstance = myContract.at(data.versicherungsvertragsadresse);

    myContractInstance.aendereVertrag(
      param1,param2,param3,param4,param5,
      {from : bcManager, value: gebuehr0, gas: fgDefaultGas},
      function(err, result){
        if(!err) {
          // NOTE: The callback will fire twice!
          // Once the contract has the transactionHash property set and once its deployed on an address.
           // e.g. check tx hash on the first call (transaction send)
          if(!myContract.address) {
              console.log("Phase1- " + myContract.transactionHash) // The hash of the transaction, which deploys the contract

          // check address on the second call (contract deployed)
          } else {
              console.log("Phase2- " + myContract.address) // the contract address
          }
           // Note that the returned "myContractReturned" === "myContract",
          // so the returned "myContractReturned" object will also get the address set.
       }
       else {

         console.log("Fehler in der Methode beim Container aendern: " + err);

       }
      });



    console.log("Kooperation aendern fertig.")


  } catch (error) {

    console.log("Fehler bei Kooperatoin  aendern: " + err);

  }

}


function aendereKooperationBeschreibung (data) {


  console.log("aendereBeschreibung  ... " + data.kpBeschreibungNeu );

  //parameter übernehmen
  var param1=data.kpBeschreibungNeu;


  try {

    //
    // Code für ändern
    //
    var myContract = web3.eth.contract(versicherungsvertragABI);
    var myContractInstance = myContract.at(versicherungsvertragContractADR);
      console.log("contract/contractinstanz:" + myContract + "/" + myContractInstance);
      console.log("contract/contractinstanz:" + myContract.address + "/" + myContractInstance.address);

    myContractInstance.aendereBeschreibung(
      param1,
      {from : bcManager, value: gebuehr0, gas: fgGaslimit},
      function(err, result){
        if(!err) {
          // NOTE: The callback will fire twice!
          // Once the contract has the transactionHash property set and once its deployed on an address.
           // e.g. check tx hash on the first call (transaction send)
          if(!myContract.address) {
              console.log("Phase1- " + myContract.transactionHash) // The hash of the transaction, which deploys the contract

          // check address on the second call (contract deployed)
          } else {
              console.log("Phase2- " + myContract.address) // the contract address
          }
           // Note that the returned "myContractReturned" === "myContract",
          // so the returned "myContractReturned" object will also get the address set.
       }
       else {

         console.log("Fehler in der Methode beim Container aendern: " + error);

       }
      });



    console.log("Kooperationsbeschreibung aendern fertig.")


  } catch (error) {

    console.log("Fehler bei Kooperationsbeschreibung  aendern: " + error);

  }

}

function aendereVersicherungsvertragTransport (data) {

  console.log("aendereKooperationSpedition ... " + data.sSpeditionname );
  var param1=data.sSpeditionname;

  try {

    //
    // Code für ändern ????
    //
    var myContract = web3.eth.contract(versicherungsvertragABI);
    var myContractInstance = myContract.at(versicherungsvertragContractADR);
      console.log("contract/contractinstanz:" + myContract + "/" + myContractInstance);
      console.log("contract/contractinstanz:" + myContract.address + "/" + myContractInstance.address);

    myContractInstance.ergaenzeSpedition(
      param1,
      {from : bcManager, value: gebuehr0, gas: fgGaslimit},
      function(err, result){
        if(!err) {
          // NOTE: The callback will fire twice!
          // Once the contract has the transactionHash property set and once its deployed on an address.
           // e.g. check tx hash on the first call (transaction send)
          if(!myContract.address) {
              console.log("Phase1- " + myContract.transactionHash) // The hash of the transaction, which deploys the contract

          // check address on the second call (contract deployed)
          } else {
              console.log("Phase2- " + myContract.address) // the contract address
          }
           // Note that the returned "myContractReturned" === "myContract",
          // so the returned "myContractReturned" object will also get the address set.
       }
       else {

         console.log("Fehler in der Methode beim Speditionen aendern: " + error);

       }
      });



    console.log("Kooperation mit Spedition aendern fertig.")


  } catch (error) {

    console.log("Fehler bei Kooperatoin mit Spedition aendern: " + error);

  }

}



function InitTransaktion (data) {

  data.trInfo1="Gaslimit: " + fgDefaultGaslimit;
  data.trInfo2="Gasprice: " + fgDefaultGasprice;
  data.trInfo3="Gas: " + fgDefaultGas;
  data.trInfo4="Manager: " + bcManager;

}


/*************************************************
 *
 *
 * 0Unternehmen managen
 *
 *
 ***************************************************/
function versicherungsvertragAnzeigen(data,art){

  console.log("Versicherungsvertrag lesen... " + art );
  var contract;

    //web3 = new Web3(web3.currentProvider);
    //var contractDesc = web3.eth.contract(kooperationABI);
    //var contract = contractDesc.at(kooperationContractADR); // "Cast"
    if (art==0)
      contract = data.derVersicherungsvertrag;
    else {
      var contractDesc = web3.eth.contract(versicherungsvertragABI);
      contract = contractDesc.at(data.versicherungsvertragsadresse); // "Cast"
      data.derVersicherungsvertrag = contract;
    }
      

    t="0";
    data.versicherungsvertragsadresse = contract.address; //kooperationContractADR;
    //data.Systeminfo= kooperationABI + "/" + kooperationContractADR + "/" + contractDesc.adresse + "/"+ contract.adresse;
    console.log("step:" + t + "/" + data.va);

    data.versicherungsnehmer="vn";
    data.versicherer = "vu";
    try {


      t="0";
      contract.id((error, value) => {
        if (error) { console.error(error); }
        data.id = value;
      });
      console.log("step:" + t);

      t="0";
      contract.status((error, value) => {
        if (error) { console.error(error); }
        data.status = value;
      });
      console.log("step:" + t);

      t="1";
      contract.versicherungsnehmer((error, value) => {
        if (error) { console.error(error); }
        data.versicherungsnehmer = value;
      });
      console.log("step:" + t);

      t="2";
      contract.versicherer((error, value) => {
        if (error) { console.error(error); }
        data.versicherer = value;
      });
      console.log("step:" + t);

      t="3";
      contract.tarif((error, value) => {
        if (error) { console.error(error); }
        data.tarif = value;
      });
      console.log("step:" + t);

      t="4";
      contract.summe((error, value) => {
        if (error) { console.error(error); }
        data.summe = value.toString();
      });
      console.log("step:" + t);

      t="5";
      contract.laufzeit((error, value) => {
        if (error) { console.error(error); }
        data.laufzeit = value;
      });
      console.log("step:" + t);

      t="6";
      contract.beginn((error, value) => {
        if (error) { console.error(error); }
        data.beginn = value;
      });
      console.log("step:" + t);

      
      t="7";
      contract.ende((error, value) => {
        if (error) { console.error(error); }
        data.ende = value;
      });
      console.log("step" + t);

     
      t="8";
      data.anzahlTransporte=0;
      contract.gibTransportAnzahl((error, value) => {
        if (error) {console.error(error);}
        data.anzahlTransporte=value;
      });

      t="9";
      contract.gibSchadenDetails((error, value) => {
        if (error) { console.error(error); }
        data.schaden = value;
      });
      console.log("step" + t);

    } catch (error) {

      console.log("Fehler beim Versicherungsvertrag lesen:" + error);


    }


    //
    // Konto und -stand des Masters ermitteln
    //

    console.log("Versicherungsvertrag gelesen bis Schritt : " + t );

}



function versicherungsvertragAnlegen (data) {

    console.log("bin beim vertrag anlegen: " + data);
  
    //
    // Parameter aufbereiten
    //
    var param0 = data.dieKooperationAdresse;
    var param1 = data.versicherungsnehmer;
    var param2 = data.versicherer;
    var param3 = data.tarif;
    var param4 = 1; //data.versicherungsid.toNumber();
    var param5 = 100000 ; //data.summe
     
    var contractDesc = web3.eth.contract(versicherungsvertragABI);
    var vv = contractDesc.new(param0,param1,param2,param3,param4,param5, {
      from: bcManager,
      data: versicherungsvertragByteCodeADR,
      gas : fgDefaultGas
    }, function(error, value) {
        if (error)  { console.error("Fehler bei der Anlage: " + error); }
        console.log("Versicherungsvertrag angelegt!" + value.address);
        data.derVersicherungsvertrag = value.address;
        data.versicherungsvertragsadresse = value.schaden;
        versicherungsvertragRegistrieren(data);

    });
    console.log("Versicherungsvertrag anlegen abgeschlossen." + vv);

  }




function sucheVersicherungsvertrag(data)  {

  console.log("Versicherungsvertrag suchen ..." + data.derVersicherungsvertrag);

  //Anhang der Adresse den Kooperationsvertrag suchen
  var myContract = web3.eth.contract(versicherungsvertragABI);
  var contract = myContract.at(data.derVersicherungsvertragAdresse);
  data.derVersicherungsvertrag = contract;

  contract.name((error, value) => {
    if (error) { console.error("fehlerchen: " + error); }
    if (!error) {
      data.derVersicherungsvertragName = value;
    }
  });

  contract.gibTransportAnzahl((error, value) => {
    if (error) {console.error(error);}
    data.anzahlTransporte=value;
  });
  console.log("Versicherungsvertrag (noch nicht?) gefunden!");

}




/*************************************************
 *
 *
 * 3Versicherungsvertraege managen
 *
 *
 ***************************************************/
function versicherungsvertraegeSuchen(data) {

  console.log("Versicherungsverträge finden..." + data.dieKooperationName);

  var versicherungsid;
  var versicherungsname;
  var anzahl=0;
  var kooperation;

 

  try {

    // aktualisieren
    var contractDesc = web3.eth.contract(kooperationABI);
    kooperation = contractDesc.at(data.dieKooperationAdresse);
    
    //parameter übernehmen
    data.versicherungsvertraege=new Array();
    anzahl=data.anzahlVersicherungsvertraege;
    
    for (let i = 0; i < anzahl; i++) {
        console.log(i + ".Versicherungsvertrag von " + anzahl);

      //vertrag holen
      data.dieKooperation.gibVersicherungsvertrag (i,(error,value) => {
        if (error) {console.error("Fehler beim " + i + "Versicherungsvertrag:" + error);}
        if (!error) {

          console.log("Vertragadresse:" + value);
          var contractDesc = web3.eth.contract(versicherungsvertragABI);
          var contract = contractDesc.at(value); // "Cast"

          //Daten holen
          contract.gibDetails((error, value) => {
            if (error) {console.error("Fehler beim " + i + "Versicherungsvertrag:" + error);}
            if (!error) {
    
              //if (i==1) data.VersicherungsvertragFindenID=contract.address;

              //liste aktualisieren
              data.versicherungsvertraege.push (
                  {id : value[0],
                  versicherer : value[1],
                  versicherungsnehmer : value[2],
                  tarif : value[3],
                  summe : value[4],
                  status : value[6],
                  adresse: contract.address,
                  saldo : "noch kein Konto angelegt"
                }
              );
            };
          });
        }
      });
    }
    
  }
  catch (error)
  {
    console.log("Fehler beim Lesen der Unternehmen : " + error);
  }

}





function eingabeFelderInitialisieren(data) {


  console.log("Parameter erzeugen");


   //
  //Testparameter erstellen
  //
  max=1000000;
  i = Math.round(Math.random() * (max - 1)) + 1;

  data.id="rheinvertrag";
  data.versicherungsnehmer="Dampfschifffahrt OhG";
  data.versicherer="asienInvasion (Ltd.)";
  data.tarif="FlatTransport2019";
  data.versicherungsid=i.toString();
  data.summe="12000000";
  data.status="aktiv";
  data.laufzeit="24 Monate";
  data.beginn="1.7.2019";
  data.schaden=0;


  console.log("Parameter erzeugt" + data);
}



function eingabenPruefen (data) {

  var adressat;

  //
  // Wieviel ?
  /*
  try {

    betragInEth = data.amount;
    betragInWei = web3.toWei(data.amount, 'ether');
    console.log("Konvertieren erfolgreich : von " +  data.amount +" nach "+  betragInWei);

  } catch (error) {
      console.log("Fehler beim Konvertieren:" +  data.amount +"/"+  + error);
    return 2;
  }*/

  //
  // alles gut
  /*

  if (data.id=="")
    return 1;*/


  return 0;

}


function seiteVor (data) {
  var link ="tp.html?";
  link=link+"kpAdresse="+data.dieKooperationAdresse;
  link=link+"&kpName="+data.dieKooperationName;
  link=link+"&vvAdresse="+data.versicherungsvertragsadresse;
  link=link+"&vvName="+data.id;
  link=link+"&bcm="+data.derManager;

  //link=link+"','Beispiel'";
  console.log(link);
  data.link=link;
  window.open(link);

}

/*************************************************
 *
 *
 * 9Startseite aufrufen
 *
 *
 ***************************************************/
function initVue() {

  const data = {

    /* Listen */
    versicherungsvertraege : [],
    anzahlVersicherungsvertraege : 0,


    transporte : [],
    anzahlTransporte : 0,



    /* Suchparameter */
    VersichererFindenID : "versicherer-id",
    VersicherungsnehmerFindenID : "versicherten-id",

    trInfo1 :"",
    trInfo2 :"",
    trInfo3 :"",
    trInfo4 : "",
    bcPrototypVersion : "",

    /* Objekte */
     id : "id",
     versicherungsvertragsadresse : "",
     versicherer : "versicherer",
     versicherungsnehmer : "versicherungsnehmer",
     beginn : "beginn",
     ende : "ende",
     tarif : "tarif",
     status : "status",
     summe :  "summe",
     laufzeit : "laufzeit",
     schaden : "schaden",
     saldo : "saldo",
     waehrung : "waehrung",
     adresse : "adresse",

    /** aktuelle Objekte */
    derVersicherungsvertrag : "derVersicherungsvertrag",
    dieKooperation : "noch zu suchen",
    dieKooperationAdresse : "0x2f7b5140F7992EBd8Ff7d337119c5fDe767Cc004",
    dieKooperationName : "newDigitalCareerMarket",
    derManager : "...",


    /* sonstiges */
    zufallszahl : 1,
    Systeminfo : "keine Meldungen vorhanden",


  };
  new Vue({
    el: '#app',
    data: data,
    methods: {


      VersicherungsvertragAendern() {

        if (data.versicherungsnehmer!="") {
          aendereVersicherungsvertrag(data);
        }

        /*if (data.kpBeschreibungNeu!="") {
          aendereKooperationBeschreibung(data);
        }*/
      },

      
      VersicherungsvertragAuswaehlen(auswahl) {
        data.versicherungsvertragsadresse = auswahl;
        versicherungsvertragAnzeigen(data);
      },

      VersicherungsvertragSuchen() {
        versicherungsvertraegeSuchen(data);
      },

      VersicherungsvertragAnlegen() {
        if (eingabenPruefen()==0) 
          versicherungsvertragAnlegen(data);
        else  
          data.Systeminfo=">>>> bitte Felder füllen";
        //data.Systeminfo="noch nicht implementiert";
        kooperationAnzeigen(data);
      },

      VersicherungsvertragAnzeigen() {
        data.Systeminfo="";
        if (data.versicherungsvertragsadresse=="") 
          data.Systeminfo=">>>> bitte geben Sie eine Adresse an !";
        else {
          data.kpName="";
          data.kpDetails="";
          versicherungsvertragAnzeigen (data,1) ;
        }

      },

      VersicherungsvertragRegistrieren() {
        versicherungsvertragBezahlen (data);
      },



      NaechsteSeite() {
        seiteVor(data);
      },

      EingabefelderInitialisieren() {
        eingabeFelderInitialisieren(data);
      },

      TestdatenErzeugen() {
        ErzeugeTestdaten(data);
      },



    }
  });

  InitTransaktion(data);

  //Werte übernommen
  data.anzahlTransporte = 0;
  data.derManager=bcManager;
  data.dieKooperationAdresse=kooperationContractADR;

  data.bcPrototypVersion = bcPrototypVersion;
  data.bcManager = bcManager;


  //Kooperation initialisieren
  kooperationAnzeigen(data);


  console.log("Initialisierung abgeschlossen");


}