/*************************************************
 * 
 * 
 * 0Konstanten managen
 * 
 * 
 ***************************************************/
const kooperationByteCode = "";
const kooperationABI = [

  {
    "constant": true,
    "inputs": [],
    "name": "name",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "beschreibung",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "versicherungen",
    "outputs": [
      {
        "name": "nr",
        "type": "uint256"
      },
      {
        "name": "name",
        "type": "string"
      },
      {
        "name": "branche",
        "type": "string"
      },
      {
        "name": "kategorie",
        "type": "string"
      },
      {
        "name": "tarife",
        "type": "string"
      },
      {
        "name": "saldo",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "details",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "speditionen",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "nr",
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "versicherungsvertraege",
    "outputs": [
      {
        "name": "",
        "type": "address"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "name": "p",
        "type": "uint256"
      },
      {
        "name": "n",
        "type": "string"
      },
      {
        "name": "d",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "name": "adr",
        "type": "address"
      },
      {
        "indexed": false,
        "name": "nr",
        "type": "uint256"
      }
    ],
    "name": "KooperationErstellt",
    "type": "event"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "gibName",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "gibNr",
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "gibDetails",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "gibBeschreibung",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "gibSpeditionAnzahl",
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "gibVersicherungAnzahl",
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "gibVersicherungsvertragAnzahl",
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "index",
        "type": "uint256"
      }
    ],
    "name": "gibVersicherungsvertrag",
    "outputs": [
      {
        "name": "",
        "type": "address"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "index",
        "type": "uint256"
      }
    ],
    "name": "gibSpedition",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "index",
        "type": "uint256"
      }
    ],
    "name": "gibVersicherungID",
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "index",
        "type": "uint256"
      }
    ],
    "name": "gibVersicherungName",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "index",
        "type": "uint256"
      }
    ],
    "name": "gibVersicherungDetails",
    "outputs": [
      {
        "name": "",
        "type": "string"
      },
      {
        "name": "",
        "type": "string"
      },
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "gibKooperation",
    "outputs": [
      {
        "name": "",
        "type": "string"
      },
      {
        "name": "",
        "type": "string"
      },
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "p",
        "type": "string"
      }
    ],
    "name": "aendereName",
    "outputs": [],
    "payable": true,
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "p",
        "type": "string"
      }
    ],
    "name": "aendereBeschreibung",
    "outputs": [],
    "payable": true,
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "p",
        "type": "string"
      }
    ],
    "name": "aendereDetails",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "n",
        "type": "string"
      },
      {
        "name": "d",
        "type": "string"
      },
      {
        "name": "b",
        "type": "string"
      }
    ],
    "name": "aendereKooperation",
    "outputs": [],
    "payable": true,
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "n",
        "type": "string"
      },
      {
        "name": "t",
        "type": "string"
      }
    ],
    "name": "ergaenzeVersicherung",
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "n",
        "type": "string"
      }
    ],
    "name": "ergaenzeSpedition",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "vv",
        "type": "address"
      }
    ],
    "name": "ergaenzeVersicherungsvertrag",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  }
  
];




/*************************************************
 * 
 * 
 * 1Kooperationen managen
 * 
 * 
 *************************/
function kooperationenSuchen (data) {
  console.log("Kooperation suchen... " + data );


  var t;
  var contractDesc; 
  var contract;
  var rc;
  var value;
  var adr;
  var list=new Array();
 

  data.kooperationen=new Array();
  data.adressen.sort();
  for (let i= 0; i < data.adressen.length; i++) {
    
      adr = data.adressen[i];
      //prüfen, ob schon vorhanden
      rc="1";
      var rc = list.indexOf(adr);
      if (rc==-1)  {
  
        list.push(adr);

        t="1";
        contractDesc = web3.eth.contract(kooperationABI);
        contract = contractDesc.at(adr); // "Cast"

       
        t="2";
        contract.gibKooperation((error, value) => {
          if (error) { console.error(error); }

            console.log(value.toString());
            data.kooperationen.push ({
              adresse:contract.address,
              name:value[0],
              details:value[1],
              beschreibung:value[2]
            });

        });
        console.log("step:" + t);
  
        
        

      }
    
  }

  data.adressen = list;
  rc = data.kooperationen.length;
  console.log(rc + "Kooperationen gefunden " );

}

function kooperationAnzeigen (data) {
  console.log("Kooperation anzeigen... " + data.kpAdresse );

  var t;
  var contractDesc; 
  var contract;
  var rc;
  var value;

  try {

      //prüfen, ob adresse
    t="0";
    rc = web3.isAddress(data.kpAdresse);
    if (rc==false)  {
      data.dieKooperation="";
      data.Systeminfo=">>>> keine korrekte Adresse angegeben !";
    }
    else {

      contractDesc = web3.eth.contract(kooperationABI);
      contract = contractDesc.at(data.kpAdresse); // "Cast"
      data.dieKooperation = contract.address; //in globale Variable schieben

      data.adressen.push(data.dieKooperation);
    
      console.log("step:" + t);

      
      t="1";
      //data.kpAdresse = contract.address;
      console.log("step:" + t);

     
      t="2";
      contract.name((error, value) => {
        if (error) { console.error(error); }
        data.kpName = value;
      });
      console.log("step:" + t);

      
      
      t="3";
      contract.details((error, value) => {
        if (error) { console.error(error); }
        data.kpDetails = value;
      });
      console.log("step:" + t);

      t="4";
      contract.beschreibung((error, value) => {
        if (error) { console.error(error); }
          data.kpBeschreibung = value;
      });
      console.log("step:" + t);
      
      
      t="5a";
      data.anzahlVersicherungen=0;
      try {
        contract.gibVersicherungAnzahl((error, value) => {
          if (error) {console.error(error);}
          else {data.anzahlVersicherungen=value.toString();}
        });

      } catch (error) {
        data.anzahlVersicherungen=0;
    
      }
      console.log("Anzahl Versicherungen in lesen: " + data.anzahlVersicherungen);

      t="5b";
      data.anzahlSpeditionen=0;
      try {
        contract.gibSpeditionAnzahl((error, value) => {
          if (error) {console.error(error);}
          else {data.anzahlSpeditionen=value.toString();}
        });

      } catch (error) {
        data.anzahlSpeditionen=0;
    
      }
      console.log("Anzahl Speditionen in lesen: " + data.anzahlSpeditionen);

      /*
      t="5c";
      data.anzahlVersicherungsvertraege=0;

      try {
        contract.gibVersicherungsvertragAnzahl((error, value) => {
          if (error) {console.error(error);}
          else {data.anzahlVersicherungsvertraege=value.toString();}
        });

      } catch (error) {
        data.anzahlVersicherungsvertraege=0;
    
      }
      console.log("Anzahl Versicherungsvertraege in lesen: " + data.anzahlVersicherungsvertraege);
      */
      data.Systeminfo="<<<< Kooperation gefunden !";





    }
    
  } catch (error) {
    
    var s =">>>> Fehler bei Kooperation anzeigen (Schritt)" + error + "("+ t + ")" ;
    data.Systeminfo=s;
    console.log(s);

  }
  
  console.log(">>>> Fehler bei Kooperation lesen - gelesen bis Schritt : " + t );

}



function kooperationAnlegen (data) {

  console.log("Kooperation anlegen ... " + data.kpName );

  data.anzahlSpeditionen=0;
  data.anzahlVersicherungen=0;
  data.anzahlVersicherungsvertraege=0;

  try {


    //
    //bereits ermittelte werte holen
    //var contract = data.dieKooperation; 
    var param0=0;
    var param1=data.kpName;
    var param2=data.kpDetails;
    var param3=data.kpBeschreibung;

    var kpContract = web3.eth.contract(kooperationABI);
    var kooperation = kpContract.new(param0,param1,param2,
        {
          from: bcManager ,
          data: kooperationByteCode,
          gas: fgDefaultGas,
        }, function (e, contract){
     
         console.log(e, contract);
         if (typeof contract.address !== 'undefined') {

              data.Systeminfo="<<<< Kooperation erstellt";
              console.log('Kooperationsvertrag1 erstellt! : ' + contract.address + ' transactionHash: ' + contract.transactionHash);
              data.dieKooperation = contract.address;
              data.adressen.push(data.dieKooperation);


         }
         

      })
    data.Systeminfo="<<<< Auftrag zur Erstellung der Kooperation erstellt";
    console.log("Kooperation <<<< Auftrag zur Erstellung der Kooperation erstellt fertig.")
 
  } catch (error) {

    data.Systeminfo=">>>> Fehler bei Auftrag zur Erstellung einer Kooperation";
    console.log("Fehler bei Kooperatoin  anlegen : " + error);
    
  }

}


 function kooperationAendern (data) {

  console.log("Kooperation aendern ... " + data.kpName );

  var myContract = web3.eth.contract(kooperationABI);
  var contract = myContract.at(data.dieKooperation);
  try {

    var param1=data.kpName;
    var param2=data.kpDetails;
    var param3=data.kpBeschreibung;

     
    contract.aendereKooperation(
      param1,param2,param3,
      {from : bcManager, value: gebuehr1, gas: fgGaslimit}, 
      function(err, result){
        if(!err) {
          // NOTE: The callback will fire twice!
          // Once the contract has the transactionHash property set and once its deployed on an address.
           // e.g. check tx hash on the first call (transaction send)
          if(!contract.address) {
              console.log("Phase1- " + contract.transactionHash) // The hash of the transaction, which deploys the contract
          
          // check address on the second call (contract deployed)
          } else {
              console.log("Phase2- " + contract.address) // the contract address
              data.Systeminfo=">>>> Kooperation wurde geändert.";

          }
           // Note that the returned "myContractReturned" === "myContract",
          // so the returned "myContractReturned" object will also get the address set.
       }
       else {
        data.Systeminfo=">>>> Fehler bei Änderung der Kooperation.";
        console.log("Fehler in der Methode beim Container aendern: " + error);

       }
      });
      
   
    data.Systeminfo=">>>> Kooperation wurde geändert.";
    console.log("Kooperation aendern fertig.")


  } catch (error) {

    data.Systeminfo=">>>> Fehler bei der Änderung der Kooperation";
    console.log("Fehler bei Kooperatoin  aendern: " + error);
    
  }

}


function kooperationAendernBeschreibung (data) {


  console.log("aendereBeschreibung  ... " + data.kpBeschreibung);

  //parameter übernehmen
  var param1=data.kpBeschreibung;


  try {

    //
    // Code für ändern 
    //
    var myContract = web3.eth.contract(kooperationABI);
    var contract = myContract.at(data.dieKooperation);
      
    contract.aendereBeschreibung(
      param1,
      {from : bcManager, value: gebuehr0, gas: fgGaslimit}, 
      function(err, result){
        if(!err) {
          // NOTE: The callback will fire twice!
          // Once the contract has the transactionHash property set and once its deployed on an address.
           // e.g. check tx hash on the first call (transaction send)
          if(!myContract.address) {
              console.log("Phase1- " + myContract.transactionHash) // The hash of the transaction, which deploys the contract
          
          // check address on the second call (contract deployed)
          } else {
            data.Systeminfo=">>>> Kooperation wurde geändert.";

              console.log("Phase2- " + myContract.address) // the contract address
          }
           // Note that the returned "myContractReturned" === "myContract",
          // so the returned "myContractReturned" object will also get the address set.
       }
       else {

         console.log("Fehler in der Methode beim Container aendern: " + error);

       }
      });
      
   
      data.Systeminfo=">>>> Kooperation wurde geändert.";
    console.log("Kooperationsbeschreibung aendern fertig.")


  } catch (error) {
    data.Systeminfo=">>>> Fehler bei der Änderung der Kooperation";
    console.log("Fehler bei Kooperationsbeschreibung  aendern: " + error);
    
  }

}


/*************************************************
 * 
 * 
 * 2Versicherungen managen
 * 
 * 
 ***************************************************/


function suchenVersicherung(data) {

  console.log("Versicherungen finden..." + data);

 

  var versicherungsid;
  var versicherungsname;
  var versicherungkonto;
  var versicherungsaldo;


  try {

    //bereits ermittelte werte holen
    var myContract = web3.eth.contract(kooperationABI);
    var contract = myContract.at(data.dieKooperation);
    var anzahl = data.anzahlVersicherungen ; 

    data.versicherungen=new Array();
    for (let i = 0; i < anzahl; i++) {
         console.log(i + ".Versicherung von " + anzahl);

      contract.gibVersicherungDetails (i, (error, value) => {
        /*versicherungsid = value[1];
        versicherungsname = value[0];
   
       id holen
      contract.gibVersicherungID (i, (error, value) => {
          console.log(" id" + value);
          versicherungsid=value;

          //name holen
          contract.gibVersicherungName(i, (error, value) => {
            console.log(" name:" + value);
            versicherungsname = value;*/
   

          console.log("idn: " +versicherungsname+ versicherungsid);

          if (i == 0) {
            versicherungkonto="0x8fE0a6b140AF178661cf8FD0197d1782A5dd79Ad";
            versicherungsaldo="39983";

          }
          else {
            versicherungkonto="noch kein Konto";
            versicherungsaldo="-";
          }


          //liste aktualisieren
          data.versicherungen.push
              (
                {id : i, 
                name : value[0],
                branche : "Versicherung",
                kategorie : value[2],
                tarife : value[1], 
                saldo : versicherungsaldo ,
                waehrung : data.bcWaehrung,
                adresse: versicherungkonto}
          );
        //});           

      });



     
      console.log(i + ".Unternehmen: " + name);
    }
  }
  catch (error) 
  {
    console.log("Fehler beim Lesen der Unternehmen : " + error);
  }

}


function kooperationAendernVersicherung (data) {

  console.log("aendereKooperationVersicherungen ... " + data.uUnternehmenname +  "/" + data.uUnternehmenbranche );


  try {

    var myContract = web3.eth.contract(kooperationABI);
    var contract = myContract.at(data.dieKooperation);

    //
    //bereits ermittelte werte holen
    var anzahl = data.anzahlSpeditionen;

    var param1=data.uUnternehmenname;
    var param2=data.uUnternehmentarif;
    //var param3=bcAccount;
 
    //anzeigebereich initialisieren 
    data.speditionen=new Array();
      
    contract.ergaenzeVersicherung(
      param1,param2,
      {from : bcManager, value: gebuehr0, gas: fgGaslimit}, 
      function(err, result){
        if(!err) {
          // NOTE: The callback will fire twice!
          // Once the contract has the transactionHash property set and once its deployed on an address.
           // e.g. check tx hash on the first call (transaction send)
          if(!contract.address) {
              console.log("Phase1- " + contract.transactionHash) // The hash of the transaction, which deploys the contract
          
          // check address on the second call (contract deployed)
          } else {
              console.log("Phase2- " + contract.address) // the contract address
          }
           // Note that the returned "myContractReturned" === "myContract",
          // so the returned "myContractReturned" object will also get the address set.
       }
       else {

         console.log("Fehler in der Methode beim Container aendern: " + error);

       }
      });
      
   
    
    console.log("Kooperation aendern fertig.")


  } catch (error) {

    console.log("Fehler bei Kooperatoin  aendern: " + error);
    
  }

}


/*************************************************
 * 
 * 
 * 3Speditionen managen
 * 
 * 
 ***************************************************/

function kooperationAendernSpedition (data) {

  console.log("KooperationAendernSpedition ... " + data.sSpeditionname );

  try {

    //
    //bereits ermittelte werte holen
    var myContract = web3.eth.contract(kooperationABI);
    var contract = myContract.at(data.dieKooperation);
    var param1=data.sSpeditionname;
    
    contract.ergaenzeSpedition(
      param1,
      {from : bcManager, value: gebuehr0, gas: fgGaslimit}, 
      function(err, result){
        if(!err) {
          // NOTE: The callback will fire twice!
          // Once the contract has the transactionHash property set and once its deployed on an address.
           // e.g. check tx hash on the first call (transaction send)
          if(!contract.address) {
              console.log("Phase1- " + contract.transactionHash) // The hash of the transaction, which deploys the contract
          
          // check address on the second call (contract deployed)
          } else {
              console.log("Phase2- " + contract.address) // the contract address
          }
           // Note that the returned "myContractReturned" === "myContract",
          // so the returned "myContractReturned" object will also get the address set.
       }
       else {

         console.log("Fehler in der Methode beim Speditionen aendern: " + error);

       }
      });
      
   
    
    console.log("Kooperation mit Spedition aendern fertig.")


  } catch (error) {

    console.log("Fehler bei Kooperatoin mit Spedition aendern: " + error);
    
  }

}



function suchenSpedition(data) {

  console.log("Speditionen finden..." + data);
  console.log("Anzahl Speditionen beim suchen : " + data.anzahlSpeditionen);   

  var speditionkonto="";
  var speditionsaldo="";

  try {

    //bereits ermittelte werte holen
    var anzahl = data.anzahlSpeditionen;
    var myContract = web3.eth.contract(kooperationABI);
    var contract = myContract.at(data.dieKooperation);
 
    //anzeigebereich initialisieren 
    data.speditionen=new Array();


    // über alle Elemente iterieren
    for (let i = 0; i < anzahl; i++) {
      console.log(i + ".Spedition von " + anzahl);

      //spedition holen
      contract.gibSpedition(i,(error, value) => {
        if (error) {console.error("Fehler beim " + i + "Speditionselement:" + error);}
        if (!error) {
      
            //gebiet faken
            var op;
            if (i%2 == 0) {op="national";}
            else {op="international";};

            if (i == 3) {
              speditionkonto="0x02903bC22f5bb4a0e05A74bb32F51EE7047546E3";
              speditionsaldo="39983";
  
            }
            else {
              speditionkonto="noch kein Konto";
              speditionsaldo="-";
            }
      
            //liste füllen
            data.speditionen.push(
              {id : i, 
              name : value,
              branche : "Spedition",
              kategorie : "B",
              gebiet : op,
              saldo : speditionsaldo,
              waehrung : data.bcWaehrung,
              adresse: speditionkonto}
            );
        }
     });
  }

  } catch (error) {

    console.log("Fehler beim Lesen der Speditionen : " + error);
  }

}

/*************************************************
 * 
 * 
 * 4Eingaben managen
 * 
 * 
 ***************************************************/
function eingabefelderInitialisieren(data) {


  console.log("Parameter erzeugen");
  var max;

  data.kpName="Transport-Versicherung-Kooperation Genossenschaft",
  data.kpBeschreibung="Die Kooperation ist die eine gleichberechtigte Gemeinschaft von Unternehmen die im Bereich der Logistik-Versicherung tätig sind.",
  data.kpDetails="Gründungsdatum: 1.1.2019"

  /*
  /* parameter für spätere Anlage 
  */
  max=1000000;
  i = Math.round(Math.random() * (max - 1)) + 1;
  data.uUnternehmenid=i;
  data.uUnternehmenname="asienInvasion LIMITED.";
  data.uUnternehmenbranche="Versicherung";
  data.uUnternehmentarif="veryFlexEurope-StopLoss";
  data.uUnternehmenkategorie="C";

  data.sSpeditionname="flink&schnell OhHG";

  console.log("Parameter erzeugt" + data);
}


function berechtigungPruefen (data) {

  data.Berechtigung = "nok";
  web3.eth.getAccounts((err,value) => {
    if (err) { console.log("fehler:" + err); }
    if (!err) {
      if (value[0]!=bcManager) {
        data.Systeminfo=">>>> Berechtigung fehlt - bitte bcManager und Metamask-Account vergleichen";
        data.Berechtigung = "nok";
      }
      else {
        data.Systeminfo=">>>> Berechtigung ist vorhanden";
        data.Berechtigung = "ok";

      }
    }
  });

}

function eingabefelderPruefen (data) {

  var adressat;

  //
  // Wieviel ?
  //
  try {

    betragInEth = data.amount;
    betragInWei = web3.toWei(data.amount, 'ether');
    console.log("Konvertieren erfolgreich : von " +  data.amount +" nach "+  betragInWei);
    
  } catch (error) {
      console.log("Fehler beim Konvertieren:" +  data.amount +"/"+  + error);
    return 2;
  }

  //
  // alles gut
  //
  return 0;

}

function seiteVor (data) {
  var link ="vv.html?";
  link=link+"kp="+data.dieKooperation;
  link=link+"&bcm="+data.bcManager;
  //link=link+"','Beispiel'";
  console.log(link);
  data.link=link;
  window.open(link);

}



function transaktionInitialisieren (data) {

  data.trInfo1="Gaslimit: " + fgDefaultGaslimit;
  data.trInfo2="Gasprice: " + fgDefaultGasprice;
  data.trInfo3="Gas: " + fgDefaultGas;
  data.trInfo4="Manager: " + bcManager;

  var v;
  data.bcManagerSaldo="0";
  web3.eth.getBalance(data.bcManager,(err,value) => {
    if (err) { console.log(err); }
    if (!err) { 
      //var v = web3.utils.fromWei(value[0], 'ether');
      //web3.utils.fromWei(web3.utils.toBN(updatedBalance).toString() )
      var v = value / 1e18;
      data.bcManagerSaldo = v;
  
    }
  });


}


/*************************************************
 * 
 * 
 * 9Startseite aufrufen
 * 
 * 
 ***************************************************/
function initVue() {

  const data = {



    /* Listen */
    kooperationen : [],
    adressen:[],
    anzahlKooperationen : "0",
    
    versicherungen : [],
    anzahlVersicherungen : 0,
  
    speditionen: [],
    anzahlSpeditionen: "0",

    anzahlVersicherungsvertraege : "0",



    /* Suchparameter */
    UnternehmenFindenID : "unternehmen-id",
    UnternehmenFindenADR : "unternehmen-adresse",

    VersichererFindenID : "versicherer-id",
    VersichererFindenADR : "versicherer-adresse",
    
    VersicherungsnehmerFindenID : "versicherten-id",
    VersicherungsnehmerFindenADR : "versicherten-adresse",
    

    

    /* Objekte */
    dieKooperation : "",
  
    trInfo1 :"", 
    trInfo2 :"", 
    trInfo3 :"", 
    trInfo4 :"",

    bcManager : "",
    bcManagerSaldo : "",
    bcWaehrung : "EVE" ,
    bcPrototypVersion : "",

    kpName : "",
    kpAdresse : "",
    kpDetails : "",
    kpBeschreibung : "",
    kpSaldo : "",
    kpWaehrung : "waehrung",
    
 
   
    vUnternehmen : "unternehmen",
    uUnternehmenname : "unternehmenname",
    uUnternehmenid : "unternehmenid",
    uUnternehmentarif : "unternehmentarif",
    uUnternehmentarif : "unternehmentarif",
    uUnternehmenbranche : "unternehmenbranche",
    uUnternehmensaldo : "unternehmensaldo",
    
    
    vuVersicherer : "versicherer",
    vUnternehmensnehmer: "unternehmensnehmer",
    vUnternehmensid: "unternehmensvertrag-id",
    vUnternehmenssumme: "unternehmenssumme",
    vUnternehmensbeginn: "unternehmensbeginn",

    spedition : "spediton",
    sSpeditionname : "name",


    /** aktuelle Objekte */

    /* sonstiges */
    Systeminfo : "",
    link:""


  };
  new Vue({
    el: '#app',
    data: data,
    methods: {

      

      KooperationAnzeigen() {
        data.Systeminfo="";
        if (data.kpAdresse=="") 
          data.Systeminfo=">>>> bitte geben Sie eine Adresse an !";
        else {
          data.kpName="";
          data.kpDetails="";
          kooperationAnzeigen(data);
        }
      },

      KooperationAnlegen() {
        data.Systeminfo="";
        if (data.kpName=="")
          data.Systeminfo=">>>> bitte geben Sie eine Namen für die Kooperation an !";
        else {
          //berechtigungPruefen (data);
          kooperationAnlegen(data);

        }
         
      },

      KooperationAendern() {
        data.Systeminfo="";
        if (data.dieKooperation=="")
           data.Systeminfo=">>>> bitte wählen sie zuerst eine Kooperation aus !";
        else
          kooperationAendern(data);
      },
            
      KooperationSuchen() {
        data.Systeminfo="";
        kooperationenSuchen(data);
        //data.Systeminfo=">>>> keine weiteren Kooperationen gefunden !";
      },

      VersicherungSuchen() {
        data.Systeminfo="";
        suchenVersicherung(data);
      },

      VersicherungAnlegen() {
        data.Systeminfo="";
        kooperationAendernVersicherung (data) ;
     },

      SpeditionSuchen() {
        data.Systeminfo="";
        suchenSpedition(data);
      },

      SpeditionAnlegen() {
        data.Systeminfo="";
        kooperationAendernSpedition(data);
      },

      NaechsteSeite() {
        data.Systeminfo="";
        if (data.dieKooperation=="")
          data.Systeminfo=">>>> bitte wählen sie zuerst eine Kooperation aus !";
        else
          seiteVor(data);
      },

      EingabefelderInitialisieren() {
        data.Systeminfo=">>>> Eingabefelder wurden initialisiert";
        eingabefelderInitialisieren(data);
      },

    }
  });



  data.bcManager=bcManager;
  data.kpAdresse= "";
  data.kpName="";
  data.kpDetails="";
  data.kpBeschreibung="";
  data.anzahlKooperationen="0";
  data.anzahlVersicherungen="0";
  data.anzahlSpeditionen="0";
  data.bcPrototypVersion = bcPrototypVersion;


  data.kpAdresse="0x6823E53811BC4C7A5a36Fc1bD28C78D6791c5F03";
  
  transaktionInitialisieren(data);

 
  console.log("Initialisierung abgeschlossen");
  

}
